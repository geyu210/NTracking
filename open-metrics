#!/bin/bash

# Environment setup
export PATH=$PATH:$HOME/.local/bin
base_dir="/var/safenode-manager/services"

# Current time for influx database entries
influx_time="$(date +%s%N | awk '{printf "%d0000000000\n", $0 / 10000000000}')"
time_min=$(date +"%M")

# Counters
total_rewards_balance=0
total_nodes_running=0
total_nodes_killed=0

# Arrays
declare -A dir_pid
declare -A node_numbers
declare -A node_details_store

# Process nodes
for dir in "$base_dir"/*; do
    if [[ -f "$dir/safenode.pid" ]]; then
        dir_name=$(basename "$dir")
        dir_pid["$dir_name"]=$(cat "$dir/safenode.pid")
        node_number=${dir_name#safenode}
        node_numbers["$dir_name"]=$node_number
        node_details=$(jq '.nodes[] | select(.service_name == "'$dir_name'")' /var/safenode-manager/node_registry.json)

        # Skip if node status is ADDED
        if [[ $(jq -r .status <<< "$node_details") == "Added" ]]; then
            continue
        fi

        # Retrieve process information
        process_info=$(ps -o rss,%cpu -p "${dir_pid[$dir_name]}" | awk 'NR>1')
        if [[ -n "$process_info" ]]; then
        total_nodes_running=$((total_nodes_running + 1))
        status="TRUE"
        mem_used=$(echo "$process_info" | awk '{print $1/1024}')
        cpu_usage=$(echo "$process_info" | awk '{print $2}')
        else
        total_nodes_killed=$((total_nodes_killed + 1))
        status="FALSE"
        mem_used=0
        cpu_usage=0
        fi

        peer_id=$(jq -r .peer_id <<< "$node_details")
        node_version=$(jq -r .version <<< "$node_details")
        rewards_balance=$(safe wallet balance --peer-id /var/safenode-manager/services/safenode$node_number | awk 'NR==3{print $7}')
        total_rewards_balance=$(echo "scale=10; $total_rewards_balance + $rewards_balance" | bc -l)

        # Format for InfluxDB
        node_details_store[$node_number]="nodes,id=$dir_name,peer_id=$peer_id status=$status,pid=${dir_pid[$dir_name]}i,version=\"$node_version\",records=$(find "$dir/record_store" -type f | wc -l)i,rewards=$rewards_balance,cpu=$cpu_usage,mem=$mem_used $influx_time"
        #sleep to slow script down to spread out cpu spike
        sleep 1
    fi
done


# Sort
for num in $(echo "${!node_details_store[@]}" | tr ' ' '\n' | sort -n); do
    echo "${node_details_store[$num]}"
done

